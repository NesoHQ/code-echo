services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    env_file:
      - ./backend/.env
    ports:
      - '${PORT:-4000}:4000'
    depends_on:
      - postgres
      - redis
      - minio
      - codeecho-cli
    networks:
      - codeecho-net
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: pnpm dev

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: codeecho
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - codeecho-net

  redis:
    image: redis:7-alpine
    command: ['redis-server', '--save', '60', '1', '--loglevel', 'warning']
    ports:
      - '6379:6379'
    networks:
      - codeecho-net

  minio:
    image: minio/minio
    command: server /data
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY:-minio}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY:-minio123}
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data:/data
    networks:
      - codeecho-net

  codeecho-cli:
    build:
      context: ./codeecho-cli
      dockerfile: Dockerfile
    image: ${CODEECHO_DOCKER_IMAGE:-neso/codeecho:local}
    networks:
      - codeecho-net

volumes:
  pgdata:
  minio-data:

networks:
  codeecho-net:
    driver: bridge
